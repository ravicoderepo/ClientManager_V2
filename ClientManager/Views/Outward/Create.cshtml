@model ClientManager.Models.OutwardData
@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<style>
    textarea {
        width: 100% !important;
        border: 1px solid #ced4da !important;
        border-radius: .25rem !important;
        padding: .375rem .75rem !important;
    }

    fieldset {
        background-color: #fff;
        border: 1px solid #351ded;
        padding: 5px 10px;
    }

    legend {
        background-color: #fff;
        color: #351ded;
        padding: 2px 5px;
        border-radius: .25rem !important;
        width: auto;
        font-size: 1.1rem;
        font-weight: bold;
    }
</style>
<div class="content-wrapper">

    <!-- Content Header (Page header) -->
    <section class="content-header">
        <div class="container-fluid">
            <div class="row mb-2">
                <div class="col-sm-6">
                    <h1>Outward</h1>
                </div>
                <div class="col-sm-6">
                    <ol class="breadcrumb float-sm-right">
                        <li class="breadcrumb-item"><a href="#">Stock</a></li>
                        <li class="breadcrumb-item"><a href="#">Outward</a></li>
                        <li class="breadcrumb-item active">Create</li>
                    </ol>
                </div>
            </div>
        </div><!-- /.container-fluid -->
    </section>

    <!-- Main content -->
    <section class="content">
        <div class="container-fluid">
            <div class="row">
                <!-- left column -->
                <div class="col-md-12">
                    <!-- jquery validation -->
                    <div class="card card-primary">
                        <div class="card-header">
                            <h3 class="card-title">Outward Details</h3>
                        </div>
                        <!-- /.card-header -->
                        <!-- form start -->
                        <form id="quickForm">
                            <div class="card-body">
                                @*<div class="row">
                                        <div class="col-md-12">
                                            <div class="form-group">
                                                <label for="status">Status</label>
                                                @Html.HiddenFor(model => model.IsActive, new { htmlAttributes = new { @id = "hdnUserStatus" } })
                                                @Html.DropDownList("Status", null, htmlAttributes: new { @class = "form-control select2", @id = "ddlStatus", @onChange = "fnStatusChange()" })
                                            </div>
                                        </div>
                                    </div>*@
                                <fieldset>
                                    <legend>Invoice Details</legend>
                                    <div class="row">
                                        <div class="col-md-6">
                                            <div class="form-group">
                                                <label for="InvoiceNumber">Invoice Number</label>
                                                <div class="input-group date" data-target-input="nearest">

                                                    @Html.HiddenFor(model => model.Id, new { htmlAttributes = new { @id = "hdnId" } })
                                                    @Html.EditorFor(model => model.InvoiceNumber, new { htmlAttributes = new { @class = "form-control", @id = "txtInvoiceNumber", @name = "InvoiceNumber" } })
                                                    <div class="input-group-append" data-target="#txtInvoiceNumber" data-toggle="datetimepicker">
                                                        <div class="input-group-text"><i class="fa fa-magic"></i></div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-md-6">
                                            <div class="form-group">
                                                <label for="CustomerName">Customer Name</label>
                                                @Html.EditorFor(model => model.CustomerName, new { htmlAttributes = new { @class = "form-control", @id = "txtCustomerName", @name = "CustomerName" } })
                                            </div>
                                        </div>


                                    </div>
                                    <div class="row">
                                        <div class="col-md-4">
                                            <div class="form-group">
                                                <label for="InvoiceDate">Invoice Date</label>
                                                <div class="input-group date" data-target-input="nearest">
                                                    @Html.EditorFor(model => model.InvoiceDate, new { htmlAttributes = new { @class = "form-control datetimepicker-input", @id = "txtInvoiceDate", @name = "InvoiceDate" } })
                                                    <div class="input-group-append" data-target="#txtInvoiceDate" data-toggle="datetimepicker">
                                                        <div class="input-group-text"><i class="fa fa-calendar"></i></div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-md-4">
                                            <div class="form-group">
                                                <label for="LRNumber">LR Number</label>
                                                @Html.EditorFor(model => model.LRNumber, new { htmlAttributes = new { @class = "form-control", @id = "txtLRNumber", @name = "LRNumber" } })
                                            </div>
                                        </div>

                                        <div class="col-md-4">
                                            <div class="form-group">
                                                <label for="status">Status</label>
                                                @Html.HiddenFor(model => model.Status, new { htmlAttributes = new { @id = "hdnStatus" } })
                                                @Html.DropDownList("Status", null, htmlAttributes: new { @class = "form-control select2", @id = "ddlStatus", @onChange = "fnValueChange('status')" })
                                            </div>
                                        </div>

                                    </div>
                                    <div class="row">
                                        <div class="col-md-12">
                                            <div class="form-group">
                                                <label for="Comments">Comments</label>
                                                @Html.EditorFor(model => model.Comments, new { htmlAttributes = new { @class = "form-control", @id = "txtComments", @name = "Comments" } })
                                            </div>
                                        </div>
                                    </div>
                                </fieldset>
                                <br />
                                <fieldset>
                                    <legend>Invoice Products</legend>
                                    @Html.Partial("OutwardItemPartial", (ClientManager.Models.OutwardItemData)Model.OutwardItemData)
                                </fieldset>
                            </div>
                            <div class="card-footer">
                                <button type="submit" class="btn btn-primary">Submit</button> <button type="button" class="btn btn-danger">Cancel</button>
                                <button type="button" class="btn btn-outline-secondary" onclick="javascript:location.href='List'" id="btnBack">Back to List</button>
                            </div>
                            <!-- /.card-body -->
                        </form>
                    </div>
                </div>
                <!-- /.card -->
            </div>

            <!--/.col (left) -->
            <!-- right column -->
            <div class="col-md-6">

            </div>
            <!--/.col (right) -->
            <!-- /.row -->
        </div><!-- /.container-fluid -->
    </section>
    <!-- /.content -->
</div>
<script>
    $(window).on('load', function () {

        if ('@ViewBag.AccessLevel' == "View") {
            $('#quickForm :input').each(function () {

                if ($(this).attr('Id') != 'btnBack') {

                    $(this).prop('disabled', true);
                }
            });
        }
    });
    $('#txtInvoiceDate').datetimepicker({
        format: 'DD/MM/YYYY'
    });

    $(function () {
        //
        $.validator.setDefaults({
            submitHandler: function () {

                // alert("Form successful submitted!");
                $("input[name=IsActive]").val($('#ddlStatus').val());
                $("input[name=TypeId]").val($('#ddlTypeId').val());
                $("input[name=ItemId]").val($('#ddlItemId').val());
                $("input[name=MaterialId]").val($('#ddlMaterialId').val());
                $("input[name=ReceivedFrom]").val($('#ddlCompanyId').val());
                fnSubmitItemDetails();
            }
        });
        $('#quickForm').validate({

            rules: {
                saleDate: {
                    required: true,
                },
                clientName: {
                    required: true,
                },
            },
            messages: {
                saleDate: {
                    required: "Please enter a email address",
                },
                clientName: {
                    required: "Please provide a password",
                },
            },
            errorElement: 'span',
            errorPlacement: function (error, element) {
                error.addClass('invalid-feedback');
                element.closest('.form-group').append(error);
            },
            highlight: function (element, errorClass, validClass) {
                $(element).addClass('is-invalid');
            },
            unhighlight: function (element, errorClass, validClass) {
                $(element).removeClass('is-invalid');
            }
        });
    });

    
    function fnStatusChange() {

        $("input[name=IsActive]").val($('#ddlStatus').val());

    }
    



    function fnSubmitItemDetails() {

        var OutwardData = {

            ItemId: $('input[name=ItemId]').val(),
            TypeId: $("input[name=TypeId]").val() ,
            MaterialId: $("input[name=MaterialId]").val(),
            Quantity: $("#txtAddQuantity").val(),
            PONumber: $("#txtPONumber").val(),
            ReceivedFrom: $("input[name=ReceivedFrom]").val(),
            ReceivedBy: $("#txtReceivedBy").val(),
            ReceivedDate: $("#txtReceivedDate").val(),
            GRNnumber: $("#txtGRNnumber").val(),
            //IsActive: ($("input[name=IsActive]").val()=='1') ? true: false,
            Description: $('#txtDescription').val()
        };

        $.ajax({
            type: "POST",
            url: "/Outward/Create",
            data: JSON.stringify(OutwardData),
            dataType: "json",
            contentType: 'application/json; charset=utf-8',
            success: function (data) {
                if (data.status == "Success") {
                    alert(data.message);
                    window.location.href = data.redirectURL;
                }
                else {
                    alert(data.message);
                }
            },
            error: function () {
                alert("Error occured!!  " + data.message)
            }
        });
    }

    $("#mnuOutwardList").addClass("active");
    var parentMenu = $("#mnuOutwardList").parent().parent().parent();

    parentMenu.attr("class", "nav-item menu-is-opening menu-open");
    parentMenu.find("ul").each(function () {

        $(this).attr("style", "display:block");

    });
   
    </script>