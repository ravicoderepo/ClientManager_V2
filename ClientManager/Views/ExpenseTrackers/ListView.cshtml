@model IEnumerable<DBOperation.ExpenseTracker>

@{
    var currentUser = (ClientManager.Models.UserDetails)Session["UserDetails"];
}
<style>
    table tr td:first-child {
        white-space: nowrap;
    }

    table thead tr th {
        white-space: nowrap;
    }

    table thead tr td {
        white-space: nowrap !important;
        font-size: 8px !important;
    }

    table.table-bordered.dataTable th, table.table-bordered.dataTable td {
        white-space: nowrap !important;
    }

    body {
        font-size: 13px !important;
    }

    .dataTables_filter {
        display: none !important;
    }

    .cashTableHeader {
        width: 200px;
    }
    .cashTableAmounCol {
        width: 80px;
    }
</style>
<div class="row" id="pettyCashSummary">
    <div class="col-12 col-sm-12"><span style="font-weight:bold; font-size:15px"> PettyCash Summary of @ViewBag.CurrentMonthAndYear </span> </div>
    <div class="col-12 col-sm-12">
        <table>
            <tr>
                <td class="cashTableHeader">Total PettyCash  </td>
                <td>:</td>
                <td style="text-align:right; color:blue; font-weight:bold"> <a href="/PettyCashes/List"> @ViewBag.TotalPettyCash </a>  </td>
                <td>[Click to PettyCash Details]</td>
            </tr>
            <tr>
                <td class="cashTableHeader">Available PettyCash</td>
                <td>:</td>
                <td style="text-align: right; color: green; font-weight: bold" class="cashTableAmounCol">@ViewBag.AvailablePettyCash</td>
                <td>[Total PettyCash - Total Approved & Verified]</td>
            </tr>
            <tr>
                <td class="cashTableHeader">Total Expense (Un Approved)   </td>
                <td>:</td>
                <td style="text-align: right; color: red; font-weight: bold " class="cashTableAmounCol">@ViewBag.TotalUnApprovedExpence</td>
                <td></td>
            </tr>
            <tr>
                <td class="cashTableHeader">Total Expense (Verified)   </td>
                <td>:</td>
                <td style="text-align: right; color: darkred; font-weight: bold" class="cashTableAmounCol">@ViewBag.TotalApprovedExpence</td>
                <td></td>
            </tr>
            <tr>
                <td class="cashTableHeader">Total Expense (Un Verified)   </td>
                <td>:</td>
                <td style="text-align: right; color: crimson; font-weight: bold" class="cashTableAmounCol">@ViewBag.TotalUnVerifiedExpence</td>
                <td></td>
            </tr>
        </table>
    </div>
</div>
<div id="gridView">
    <table id="example1" class="table table-bordered table-striped">
        <thead>
            <tr>
                <th>Action</th>
                <th>
                    Expence Amount
                </th>
                <th>
                    Expence Date
                </th>
                <th>
                    Expence Category
                </th>
                <th>
                    Status
                </th>
                <th>
                    Description
                </th>
                @*<th>
                        Created On
                    </th>
                    <th>
                        Created By
                    </th>
                    <th>
                        Modified On
                    </th>
                    <th>
                        Modified By
                    </th>*@
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        @if (currentUser.UserRoles.Any(wh => wh.RoleName == "Store Admin"))
                        {
                            <button type="button" class="btn btn-primary btn-xs" title="Edit" onclick="javascript:location.href='/ExpenseTrackers/Edit/@item.Id'"><i class="far fa-edit"></i></button>
                        }
                        else
                        {
                            <button type="button" class="btn btn-primary btn-xs" title="View" onclick="javascript:location.href='/ExpenseTrackers/Edit/@item.Id'"><i class="fas fa-eye"></i></button>
                        }

                        @if (currentUser.UserRoles.Any(wh => wh.RoleName == "Approver") && item.Status == "Pending")
                        {
                            <button type="button" class="btn btn-success btn-xs" title="Approve" onclick="fnApprove(@item.Id,'Approved')"><i class="far fa-arrow-alt-circle-right"></i></button>
                            @*<button type="button" class="btn btn-outline-secondary btn-xs" title="Verify" onclick="fnVerify(@item.Id,'Verified')"><i class="far fa-arrow-alt-circle-up"></i></button>*@
                            @*<button type="button" class="btn btn-outline-secondary btn-xs" title="Verify" onclick="fnVerify(@item.Id,'Verified')"><i class="far fa-arrow-alt-circle-up"></i></button>*@
                        }

                        @if (currentUser.UserRoles.Any(wh => wh.RoleName == "Verifier") && item.Status == "Approved")
                        {
                            <button type="button" class="btn btn-success btn-xs" title="Verify" onclick="fnVerify(@item.Id,'Verified')"><i class="far fa-arrow-alt-circle-right"></i></button>
                        }

                        @if (currentUser.UserRoles.Any(wh => wh.RoleName == "Store Admin") && item.Status == "Pending")
                        {

                            <button type="button" class="btn btn-danger btn-xs" title="Delete" onclick="fnDelete(@item.Id)"><i class="far fa-trash-alt"></i></button>

                        }

                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.ExpenseAmount)
                    </td>
                    <td>
                        @*@Html.DisplayFor(modelItem => item.ExpenseDate)*@
                        @Convert.ToString(string.Format("{0:dd/MM/yyyy}", item.ExpenseDate))
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.ExpenceCategory.CategoryName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Status)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Description)
                    </td>



                        <!--<td>-->
                        @*@Html.DisplayFor(modelItem => item.CreatedOn)*@
                        <!--@Convert.ToString(string.Format("{0:dd/MM/yyyy}", item.CreatedOn))
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.User.FullName)
                        </td>
                        <td>-->
                        @*@Html.DisplayFor(modelItem => item.ModifiedOn)*@
                        <!--@Convert.ToString(string.Format("{0:dd/MM/yyyy}", item.ModifiedOn))
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.User1.FullName)
                        </td>-->
                </tr>
                }
            </tbody>
        </table>
    </div>
    <script>
        $(function () {
            $("#example1").DataTable({
                "responsive": true, "lengthChange": false, "autoWidth": false,
                //"buttons": ["excel", "pdf", "print", "colvis"]
            }).buttons().container().appendTo('#example1_wrapper .col-md-6:eq(0)');
            $('#example2').DataTable({
                "paging": true,
                "lengthChange": false,
                "searching": false,
                "ordering": true,
                "info": true,
                "autoWidth": false,
                "responsive": true,
            });
        });

        function fnDelete(id) {
            $.ajax({
                type: "GET",
                url: "/ExpenceTrakers/Delete?id=" + id,
                //data: JSON.stringify(Register),
                dataType: "json",
                contentType: 'application/json; charset=utf-8',
                success: function (data) {
                    if (data.status == "Success") {
                        alert(data.message);
                        window.location.href = data.redirectURL;
                    }
                },
                error: function () {
                    alert("Error occured!!  " + data.message)
                }
            });
        }

        function fnApprove(id, status) {
            debugger;
            $.ajax({
                type: "GET",
                url: "/ExpenseTrackers/ExpenceEntryApproval?id=" + id + "&status=" + status,
                //data: JSON.stringify(Register),
                dataType: "json",
                contentType: 'application/json; charset=utf-8',
                success: function (data) {
                    if (data.status == "Success") {
                        alert(data.message);
                        window.location.href = data.redirectURL;
                    }
                    //else {
                    //    alert(data.message);
                    //}

                },
                error: function () {
                    alert("Error occured!!  " + data.message)
                }
            });
        }
        function fnVerify(id, status) {
            debugger;
            $.ajax({
                type: "GET",
                url: "/ExpenseTrackers/ExpenceEntryVerify?id=" + id + "&status=" + status,
                //data: JSON.stringify(Register),
                dataType: "json",
                contentType: 'application/json; charset=utf-8',
                success: function (data) {
                    if (data.status == "Success") {
                        alert(data.message);
                        window.location.href = data.redirectURL;
                    }
                    //else {
                    //    alert(data.message);
                    //}

                },
                error: function () {
                    alert("Error occured!!  " + data.message)
                }
            });
        }
        $("#mnuExpenceTracker").addClass("active");
    </script>
